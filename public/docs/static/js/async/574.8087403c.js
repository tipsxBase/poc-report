"use strict";(self.webpackChunkpoc_report=self.webpackChunkpoc_report||[]).push([["574"],{1288:function(e,n,r){r.r(n),r.d(n,{default:function(){return i}});var a=r(2676),s=r(453);function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2",h3:"h3",pre:"pre",code:"code",strong:"strong",ul:"ul",li:"li",ol:"ol",h4:"h4",blockquote:"blockquote"},(0,s.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"poc-测试流程",children:["POC\xa0 测试流程",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#poc-测试流程",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/1GXn4BW12zvDODQ4/img/491e8940-98ea-4125-ad10-4d5a3c023c98.png",alt:"POC流程图-第 2 页.drawio.png"})}),"\n",(0,a.jsxs)(n.h2,{id:"从零开始做-poc",children:["从零开始做 POC",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#从零开始做-poc",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"先对目标服务器进行磁盘性能测试及网络带宽测试此步骤也可在数据库安装完成后让运维同学进行测试",children:["先对目标服务器进行磁盘性能测试及网络带宽测试，此步骤也可在数据库安装完成后让运维同学进行测试",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#先对目标服务器进行磁盘性能测试及网络带宽测试此步骤也可在数据库安装完成后让运维同学进行测试",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"fio --directory=/data/test --direct=1 --iodepth=32 --ioengine=libaio --bs=8k --size=4G --rw=randread --name=iops\n\nfio --directory=/data/test --direct=1 --iodepth=32 --ioengine=libaio --bs=8k --size=4G --rw=randwrite --name=iops\n\nfio --directory=/data/test --direct=1 --iodepth=32 --ioengine=libaio --bs=8k --size=4G --rw=write --name=iops\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"iperf3 -c 172.16.0.3 -b 1000M  -t  3  -d\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/1GXn4BW12zvDODQ4/img/536f9f16-36b3-4bff-8136-e4ab7b1f0366.png",alt:"image.png"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"注：如果客户没有提供测试的服务或客户提供的测试服务器磁盘性能或网络性能测试效果不佳，可以引导客户使用我们的服务器进行测试，这样测试过程跟测试结果更加可控"}),"。"]}),"\n",(0,a.jsxs)(n.h3,{id:"参数调整",children:["参数调整",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参数调整",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["在我们的知识库：",(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/gpG2NdyVXgxxOn3ZCXq63ekYWMwvDqPk?utm_scene=team_space",target:"_blank",rel:"noopener noreferrer",children:"海纳参数调整"}),"中有对应的调整参数的脚本："]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/NkDwLng8ZePP3RLmsmqAZ4PrJKMEvZBY?doc_type=wiki_doc&iframeQuery=anchorId%3DX02lzw3ert2ofqo5952fi",target:"_blank",rel:"noopener noreferrer",children:"请至钉钉文档查看附件《general_guc.sh》"}),"是通用的参数调整脚本"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/NkDwLng8ZePP3RLmsmqAZ4PrJKMEvZBY?doc_type=wiki_doc&iframeQuery=anchorId%3DX02lzw3h4mzi0oxzf8wnr8",target:"_blank",rel:"noopener noreferrer",children:"请至钉钉文档查看附件《oltp_guc.sh》"}),"是 \xa0TP\xa0 场景的参数调整脚本"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/NkDwLng8ZePP3RLmsmqAZ4PrJKMEvZBY?doc_type=wiki_doc&iframeQuery=anchorId%3DX02lzw3hwjf9bas7cxikct",target:"_blank",rel:"noopener noreferrer",children:"请至钉钉文档查看附件《olap_guc.sh》"}),"是 \xa0AP\xa0 场景下的参数调整脚本"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"如果测试的是 \xa0TP\xa0 场景，那么就将 \xa0general_guc.sh\xa0 跟 \xa0oltp_guc.sh\xa0 脚本执行一下，如果是 \xa0AP\xa0 场景就将 general_guc.sh\xa0 跟 \xa0olap_guc.sh\xa0 脚本执行一下。"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:"sh general_guc.sh\nsh oltp_guc.sh\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:"sh general_guc.sh\nsh olap_guc.sh\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"准备测试用例-yaml-文件",children:["准备测试用例 yaml 文件",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#准备测试用例-yaml-文件",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"根据客户的测试需求，从 POC 测试资产选择合适的测试用例，并按照测试要求将并发数、行宽及数据量进行调整。可以使用我们的工具进行测试用例管理"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/NkDwLng8ZePP3RLmsmqAZ4PrJKMEvZBY?doc_type=wiki_doc&iframeQuery=anchorId%3DX02lzw3mwy81o9lyno8wvg",target:"_blank",rel:"noopener noreferrer",children:"请至钉钉文档查看附件《POCMaster_0.2.2_aarch64.dmg》"}),(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/NkDwLng8ZePP3RLmsmqAZ4PrJKMEvZBY?doc_type=wiki_doc&iframeQuery=anchorId%3DX02lzw3mwy81o9lyno8wvg",target:"_blank",rel:"noopener noreferrer",children:"请至钉钉文档查看附件《POCMaster_0.2.2_x64_en-US.msi》"}),(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/NkDwLng8ZePP3RLmsmqAZ4PrJKMEvZBY?doc_type=wiki_doc&iframeQuery=anchorId%3DX02lzw3mwy81o9lyno8wvg",target:"_blank",rel:"noopener noreferrer",children:"请至钉钉文档查看附件《POC 测试资产.docx》"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"注："})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"如果资产库已有的用例已经有测试结果并且已经满足客户的测试需求的，大家可以跳过实际测试，直接拿测试结果。"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"如果客户没有特别具体的测试需求，那么我们可以按照客户的业务场景，比如 \xa0TP\xa0 还是 \xa0AP，然后从 POC 测试资产中选择适量用例形成测试报告。"})}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"创建需要测试数据表",children:["创建需要测试数据表",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#创建需要测试数据表",children:"#"})]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"连接数据库"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:"$ gsql\xa0-r\xa0-p\xa026700\xa0-d\xa0postgres\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"创建用户，poc 测试时推荐创建用户时指标 \xa0sysadmin\xa0 角色，后面可以省去不少表没有权限的情况"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:"hexadb=# create user poc_train_row sysadmin password 'hexadb@2024';\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"创建库"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:"hexadb=# CREATE DATABASE poc owner poc_admin_row ENCODING 'UTF8' dbcompatibility = 'PG';\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsx)(n.li,{children:"使用新建的用户连接数据库"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:"$ gsql -d poc -U poc_admin_row -W poc@20240408 -p 26700 -r\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"5",children:["\n",(0,a.jsx)(n.li,{children:"创建 schema，推荐 schema\xa0 的名称跟用户名一样，这样在使用 jdbc 连接数据库的时候就可以不用指定 \xa0schema\xa0 名称，可以很容易的实现不同的用户连接不同的 schema。"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:"  poc=> create schema poc_admin_row;\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"6",children:["\n",(0,a.jsx)(n.li,{children:"执行 DDL"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"DDL 区分是 \xa0AP\xa0 还是 \xa0TP？"}),"\n",(0,a.jsxs)(n.p,{children:["TP\xa0 场景则选择 \xa0",(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/NkDwLng8ZePP3RLmsmqAZ4PrJKMEvZBY?doc_type=wiki_doc&iframeQuery=anchorId%3DX02m00qy57lk6fghf614n",target:"_blank",rel:"noopener noreferrer",children:"请至钉钉文档查看附件《ddl-row-oltp.sql》"})]}),"\n",(0,a.jsxs)(n.p,{children:["AP\xa0 场景选择",(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/NkDwLng8ZePP3RLmsmqAZ4PrJKMEvZBY?doc_type=wiki_doc&iframeQuery=anchorId%3DX02m00qyvxi7tyn8dp05xh",target:"_blank",rel:"noopener noreferrer",children:"请至钉钉文档查看附件《ddl-column-olap.sql》"})]}),"\n",(0,a.jsx)(n.p,{children:"将 DDL 语句先上传至服务器中，通过命令创建数据表，也可以使用客户端工具比如 \xa0Navicat\xa0 或 \xa0DBeaver\xa0 等工具进行创建"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:"# 连接数据库\n$ gsql -d poc -U poc_admin_row -W poc@20240408 -p 26700 -r\n\n# 执行DDL语句\n\\i\xa0/home/omm/poc/ddl.sql;\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"执行测试",children:["执行测试",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#执行测试",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"将测试用例及测试工具上传至测试服务器，启动测试工具进行测试"}),"\n",(0,a.jsx)(n.p,{children:"注：我们的测试工具依赖于 Java17，测试工具包中包括 JDK17 及测试工具包"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plaintext",children:"./jdk-17.0.10/bin/java -jar hexadb-poc.jar -config ./poc-cases/prepare_train.yml\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plaintext",children:"nohup ./jdk-17.0.10/bin/java -jar hexadb-poc.jar -config ./poc-cases/514_train.yml > run.log 2>&1 &\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"生成形成报告",children:["生成形成报告",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#生成形成报告",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["按照我们提供的",(0,a.jsx)(n.a,{href:"https://alidocs.dingtalk.com/i/nodes/mweZ92PV6zLLZ7M6C7j1MMyyVxEKBD6p?utm_scene=team_space",target:"_blank",rel:"noopener noreferrer",children:"测试报告模板"}),"，收集测试用例的执行结果生成测试报告"]}),"\n",(0,a.jsxs)(n.h2,{id:"poc-工具",children:["POC\xa0 工具",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#poc-工具",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"21-流行流程图",children:["2.1\xa0 流行流程图",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21-流行流程图",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/1GXn4BW12zvDODQ4/img/a6ab405c-00a5-4d03-8cb6-e18dcd711c89.png",alt:"POC流程图.png"})}),"\n",(0,a.jsxs)(n.h2,{id:"数据库常用命令",children:["数据库常用命令",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#数据库常用命令",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"21-命令行相关",children:["2.1\xa0 命令行相关",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21-命令行相关",children:"#"})]}),"\n",(0,a.jsxs)(n.h4,{id:"211-查询集群状态",children:["2.1.1\xa0 查询集群状态",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#211-查询集群状态",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ cm_ctl\xa0query\xa0-Cvipd\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plaintext",children:"[ CMServer State \xa0 ]\nnode \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 node_ip \xa0 \xa0 \xa0 \xa0 instance \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 state\n------------------------------------------------------------------------------------------------\n1 hexadb-master01 172.16.0.2 \xa0 \xa0 1 \xa0 /data/hexadb_distributed/data/cmserver/cm_server Primary\n2 hexadb-master02 172.16.0.3 \xa0 \xa0 2 \xa0 /data/hexadb_distributed/data/cmserver/cm_server Standby\n[ \xa0 Cluster State \xa0 ]\ncluster_state \xa0 : Normal\nredistributing : No\nbalanced \xa0 \xa0 \xa0 : No\ncurrent_az \xa0 \xa0 : AZ_ALL\n[ Coordinator State ]\nnode \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 node_ip \xa0 \xa0 \xa0 \xa0 instance \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 state\n-----------------------------------------------------------------------------------------\n1 hexadb-master01 172.16.0.2 \xa0 \xa0 5001 26700 /data/hexadb_distributed/data/coordinator Normal\n2 hexadb-master02 172.16.0.3 \xa0 \xa0 5002 26700 /data/hexadb_distributed/data/coordinator Normal\n[ Central Coordinator State ]\nnode \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 node_ip \xa0 \xa0 \xa0 \xa0 instance \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 state\n-----------------------------------------------------------------------------------------\n2 hexadb-master02 172.16.0.3 \xa0 \xa0 5002 /data/hexadb_distributed/data/coordinator Normal\n[ \xa0 \xa0 GTM State \xa0 \xa0 ]\nnode \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 node_ip \xa0 \xa0 \xa0 \xa0 instance \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 state \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sync_state\n-----------------------------------------------------------------------------------------------------------------\n2 hexadb-master02 172.16.0.3 \xa0 \xa0 1001 /data/hexadb_distributed/data/gtm P Standby Connection ok Sync\n3 hexadb-master03 172.16.0.4 \xa0 \xa0 1002 /data/hexadb_distributed/data/gtm S Primary Connection ok Sync\n[ Datanode State \xa0 ]\nnode \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 node_ip \xa0 \xa0 \xa0 \xa0 instance \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 state \xa0 \xa0 \xa0 \xa0 \xa0 | node \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 node_ip \xa0 \xa0 \xa0 \xa0 instance \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 state \xa0 \xa0 \xa0 \xa0 \xa0 | node \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 node_ip \xa0 \xa0 \xa0 \xa0 instance \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 state\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n1 hexadb-master01 172.16.0.2 \xa0 \xa0 6001 40001 /data/hexadb_distributed/data/master1 P Primary Normal | 2 hexadb-master02 172.16.0.3 \xa0 \xa0 6002 40001 /data/hexadb_distributed/data/slave1 S Standby Normal | 3 hexadb-master03 172.16.0.4 \xa0 \xa0 3002 /data/hexadb_distributed/data/dummy1 R Secondary Normal\n2 hexadb-master02 172.16.0.3 \xa0 \xa0 6003 40201 /data/hexadb_distributed/data/master2 P Standby Normal | 3 hexadb-master03 172.16.0.4 \xa0 \xa0 6004 40201 /data/hexadb_distributed/data/slave2 S Primary Normal | 1 hexadb-master01 172.16.0.2 \xa0 \xa0 3003 /data/hexadb_distributed/data/dummy2 R Secondary Normal\n3 hexadb-master03 172.16.0.4 \xa0 \xa0 6005 40401 /data/hexadb_distributed/data/master3 P Primary Normal | 1 hexadb-master01 172.16.0.2 \xa0 \xa0 6006 40401 /data/hexadb_distributed/data/slave3 S Standby Normal | 2 hexadb-master02 172.16.0.3 \xa0 \xa0 3004 /data/hexadb_distributed/data/dummy3 R Secondary Normal\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"212-重启集群",children:["2.1.2\xa0 重启集群",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#212-重启集群",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ cm_ctl\xa0stop; cm_ctl\xa0start\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"213-使用-gs_guc-修改数据库参数",children:["2.1.3\xa0 使用 \xa0gs_guc\xa0 修改数据库参数",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#213-使用-gs_guc-修改数据库参数",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'$ gs_guc\xa0set\xa0-I\xa0all\xa0-N\xa0all\xa0-c\xa0"advance_xlog_file_num=16"\xa0-c\xa0"enable_thread_pool=off"\xa0-Z\xa0datanode\xa0-Z\xa0coordinator\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"-N\xa0node"}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"-I\xa0instance"}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"-c\xa0 具体要设置的参数值"}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"设置指定 node 指定 instance 的参数"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'# 设置 hexadb-master01 节点上 dn_6001_6002 的参数\n$ gs_guc\xa0set\xa0-N\xa0hexadb-master01\xa0-I\xa0dn_6001_6002\xa0-c\xa0"cstore_buffers=2GB"\xa0-Z\xa0datanode\n'})}),"\n",(0,a.jsxs)(n.p,{children:["有的参数修改完是不需要重启集群的，有的参数修改完是需要重启集群的，参考 \xa0",(0,a.jsx)(n.a,{href:"https://docs-opengauss.osinfra.cn/zh/docs/2.1.0/docs/Developerguide/GUC%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E.html",target:"_blank",rel:"noopener noreferrer",children:"openGauss 官网"}),"。"]}),"\n",(0,a.jsxs)(n.h3,{id:"22-数据库脚本",children:["2.2\xa0 数据库脚本",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#22-数据库脚本",children:"#"})]}),"\n",(0,a.jsxs)(n.h4,{id:"221-查询列存表的相关信息",children:["2.2.1\xa0 查询列存表的相关信息",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#221-查询列存表的相关信息",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"列存表需要注意 cu 的信息，cu 太小的话会严重影响查询性能，查询 cu(文件单元的相关信息)，需要连接 DN 上执行"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:"-- 没有分区的表\n-- 查询oid\nselect\xa0oid,\xa0*\xa0from\xa0pg_class\xa0where\xa0relname\xa0=\xa0'table_name';\n-- 查询 cu信息\nselect\xa0*\xa0from\xa0cstore.pg_cudesc_63893177\xa0-- 63893177是oid的值;\n-- 带分区的表\nselect\xa0oid,\xa0*\xa0from\xa0pg_class\xa0where\xa0relname\xa0=\xa0'poc_product';\nselect\xa0*\xa0from\xa0pg_partition\xa0where\xa0parentid\xa0=\xa063890951;\xa0-- 63890951是oid的值;\nselect\xa0*\xa0from\xa0cstore.pg_cudesc_part_63890955;\xa0-- 63890955是relfilenode对应的列\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"222-其它数据库常用脚本",children:["2.2.2\xa0 其它数据库常用脚本",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#222-其它数据库常用脚本",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:"-- 查看当前schema\nshow\xa0current_schmea;\n-- 修改schema\nset\xa0current_schema\xa0to\xa0new_schema;\n-- 查看所有schema\n\\dn\n-- 执行sql 脚本\n\\i\xa0/home/omm/ddl.sql;\n-- 查看所有数据表\n\\d+\n-- 查看指定的数据表\n\\d+\xa0table_name\n-- 查看最大连接数\nSELECT\xa0setting\xa0FROM\xa0pg_settings\xa0WHERE\xa0name\xa0=\xa0'max_connections';\n-- 查询数据库指定参数的配置\nshow\xa0max_connections;\n-- 获取当前活跃连接数\nSELECT\xa0count(*)\xa0FROM\xa0pg_stat_activity;\n-- 查询当前正在执行的SQL\nselect\xa0query\xa0\xa0from\xa0pg_stat_activity\xa0where\xa0state\xa0=\xa0'active';\n-- 查询数据的大致数据量\nanalyze\xa0t_sim_cdr_apn_usage_p;\nselect\xa0relname,\xa0reltuples\xa0from\xa0pg_class\xa0where\xa0relname\xa0like\xa0'table_name%';\n-- 停止当前正在执行的SQL\nSELECT\xa0\npg_terminate_backend(pid)\nFROM\xa0pg_stat_activity\nWHERE\xa0pid\xa0<>\xa0pg_backend_pid()\xa0-- 排除当前会话\nAND\xa0state\xa0=\xa0'active'\xa0-- 只选择活动的会话\nAND\xa0query\xa0ILIKE\xa0'%YOUR_QUERY%';\n\nselect pg_terminate_backend(pid) from pg_stat_activity where pid <> pg_backend_pid() and state = 'active' and query ilike 'SELECT b.brand_name%';\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"数据库参数设置及优化",children:["数据库参数设置及优化",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#数据库参数设置及优化",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"31-列式存储开启-delta-表",children:["3.1\xa0 列式存储开启 delta 表",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-列式存储开启-delta-表",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"列存表写入时建议开启 delta 表，如果不开启 delta 表直接写入列存表，会导致列存数据单元太小，这样不仅仅是磁盘性能占用很大，而且影响查询性能，开启 delta 后，会先将数据写入 delta 行存表，然后再自动存入列存表。"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'$ gs_guc\xa0reload\xa0-N\xa0all\xa0-I\xa0all\xa0-c\xa0"enable_delta_store=on"\xa0-Z\xa0coordinator\xa0-Z\xa0datanode\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"32-全文倒排索引gin-generalizedinvertedindex",children:["3.2\xa0 全文倒排索引(\xa0GIN->\xa0Generalized\xa0Inverted\xa0Index\xa0)",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-全文倒排索引gin-generalizedinvertedindex",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"创建 vs 插入"}),"\n",(0,a.jsx)(n.p,{children:"由于可能要为每个项目插入很多键，所以 GIN 索引的插入可能比较慢。对于向表中大量插入的操作，我们建议先删除 GIN 索引，在完成插入之后再重建索引。与 GIN 索引创建、查询性能相关的 GUC 参数如下："}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"maintenance_work_mem"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"GIN 索引的构建时间对 maintenance_work_mem 的设置非常敏感。"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"work_mem"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"在向启用了 FASTUPDATE 的 GIN 索引执行插入操作的期间，只要待处理实体列表的大小超过了 work_mem，系统就会清理这个列表。为了避免可观察到的响应时间的大起大落，让待处理实体列表在后台被清理是比较合适的（比如通过 autovacuum）。前端清理操作可以通过增加 work_mem 或者执行 autovacuum 来避免。然而，扩大 work_mem 意味着如果发生了前端清理，那么他的执行时间将更长。"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"gin_fuzzy_search_limit"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"开发 GIN 索引的主要目的是为了让 openGauss 支持高度可伸缩的全文索引，并且常常会遇见全文索引返回海量结果的情形。而且，这经常发生在查询高频词的时候，因而这样的结果集没什么用处。因为从磁盘读取大量记录并对其进行排序会消耗大量资源，这在产品环境下是不能接受的。为了控制这种情况，GIN 索引有一个可配置的返回结果行数的软上限的配置参数 gin_fuzzy_search_limit。缺省值 0 表示没有限制。如果设置了非零值，那么返回结果就是从完整结果集中随机选择的一部分。“软上限”的意思是返回结果的实际数量可能与指定的限制有偏差，这取决于查询和系统随机数生成器的质量。"}),"\n",(0,a.jsxs)(n.h3,{id:"33-复制表",children:["3.3\xa0 复制表",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#33-复制表",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"不经常变化但需要经常关联小表（比如字典表）创建为复制表，复制表会在在各个 DN 上都存在，搜索时可以减少跨 DN 查找数据。"}),"\n",(0,a.jsxs)(n.h3,{id:"34-数据库优化的参数",children:["3.4\xa0 数据库优化的参数",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#34-数据库优化的参数",children:"#"})]}),"\n",(0,a.jsxs)(n.h4,{id:"341work_mem",children:["3.4.1\xa0work_mem",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#341work_mem",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"设置内部排序操作和 Hash 表在开始写入临时磁盘文件之前使用的内存大小。ORDER\xa0BY、DISTINCT 和 merge\xa0joins 都要用到排序操作。Hash 表在散列连接、散列为基础的聚集、散列为基础的 IN 子查询处理中都要用到。"}),"\n",(0,a.jsx)(n.p,{children:"对于复杂的查询，可能会同时并发运行好几个排序或者散列操作，每个都可以使用此参数所声明的内存量，不足时会使用临时文件。同样，好几个正在运行的会话可能会同时进行排序操作。因此使用的总内存可能是 work_mem 的好几倍。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置命令："})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:'gs_guc\xa0set\xa0-N\xa0all\xa0-I\xa0all\xa0-c\xa0"work_mem=1GB"\xa0-Z\xa0coordinator\xa0-Z\xa0datanode\xa0\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置建议："})}),"\n",(0,a.jsx)(n.p,{children:"依据查询特点和并发来确定，一旦 work_mem 限定的物理内存不够，算子运算数据将写入临时表空间，带来 5-10 倍的性能下降，查询响应时间从秒级下降到分钟级。"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"对于串行无并发的复杂查询场景，平均每个查询有 5-10 关联操作，建议 work_mem=50%内存/10。"}),"\n",(0,a.jsx)(n.li,{children:"对于串行无并发的简单查询场景，平均每个查询有 2-5 个关联操作，建议 work_mem=50%内存/5。"}),"\n",(0,a.jsx)(n.li,{children:"对于并发场景，建议 work_mem=串行下的 work_mem/物理并发数"}),"\n"]}),"\n",(0,a.jsxs)(n.h4,{id:"342max_process_memory",children:["3.4.2\xa0max_process_memory",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#342max_process_memory",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"设置一个数据库节点可用的最大物理内存。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置命令："})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:'gs_guc\xa0set\xa0-N\xa0all\xa0-I\xa0all\xa0-c\xa0"max_process_memory=4GB"\xa0-Z\xa0datanode\xa0-Z\xa0coordinator\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置建议："})}),"\n",(0,a.jsx)(n.p,{children:"数据库节点上该数值需要根据系统物理内存及单节点部署主数据库节点个数决定。建议计算公式如下：(物理内存大小 \xa0-\xa0vm.min_free_kbytes)\xa0\\*\xa00.7\xa0/\xa0(1\xa0+\xa0 主节点个数)。该系数的目的是尽可能保证系统的可靠性，不会因数据库内存膨胀导致节点 OOM。这个公式中提到 vm.min_free_kbytes，其含义是预留操作系统内存供内核使用，通常用作操作系统内核中通信收发内存分配，至少为 5%内存。即，max_process_memory\xa0=\xa0 物理内存 \xa0*\xa00.665\xa0/\xa0(1\xa0+\xa0 主节点个数)。"}),"\n",(0,a.jsx)(n.p,{children:"2C3D\xa0 对应 CN 主节点个数为 2，DN 主节点个数为 3"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"注意："}),"\xa0 当该值设置不合理，即大于服务器物理内存，可能导致操作系统 OOM 问题。"]}),"\n"]}),"\n",(0,a.jsxs)(n.h4,{id:"343shared_buffers",children:["3.4.3\xa0shared_buffers",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#343shared_buffers",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"设置 HexaDB 使用的共享内存大小。增加此参数的值会使 HexaDB 比系统默认设置需要更多的 System\xa0V 共享内存。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置命令"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:'gs_guc\xa0set\xa0-N\xa0all\xa0-I\xa0all\xa0-c\xa0"shared_buffers=2GB"\xa0-Z\xa0coordinator\xa0-Z\xa0datanode\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置建议："})}),"\n",(0,a.jsx)(n.p,{children:"建议设置 shared_buffers 值为内存的 40%以内。行存列存分开对待。行存设大，列存设小。列存：(单服务器内存/单服务器数据库节点个数)*0.4*0.25。"}),"\n",(0,a.jsx)(n.p,{children:"如果设置较大的 shared_buffers 需要同时增加 checkpoint_segments 的值，因为写入大量新增、修改数据需要消耗更多的时间周期。"}),"\n",(0,a.jsxs)(n.h4,{id:"344max_connections",children:["3.4.4\xa0max_connections",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#344max_connections",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"允许和数据库连接的最大并发连接数。此参数会影响 HexaDB 的并发能力。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置命令"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:'gs_guc set -N all -I all -c "max_connections=300" -Z datanode -Z coordinator\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置建议："})}),"\n",(0,a.jsx)(n.p,{children:"当高并发时提示数据库连接不够时，通过调整 max_connections 增加数据库连接"}),"\n",(0,a.jsxs)(n.h4,{id:"345cstore_buffers",children:["3.4.5\xa0cstore_buffers",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#345cstore_buffers",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"设置列存所使用的共享缓冲区的大小。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置命令"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:'gs_guc\xa0set\xa0-N\xa0all\xa0-I\xa0all\xa0-c\xa0"cstore_buffers=2GB"\xa0-Z\xa0datanode\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"设置建议："})}),"\n",(0,a.jsx)(n.p,{children:"列存表使用 cstore_buffers 设置的共享缓冲区，几乎不用 shared_buffers。因此在列存表为主的场景中，应减少 shared_buffers，增加 cstore_buffers。"}),"\n",(0,a.jsxs)(n.h2,{id:"faq",children:["FAQ",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#faq",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"41-当列存表开启-delta31通过-221-查询发现数据还在-delta-表没有真正写入列存表时要怎么办",children:["4.1\xa0 当列存表开启 delta（3.1）通过 2.2.1 查询发现数据还在 delta 表，没有真正写入列存表时，要怎么办？",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-当列存表开启-delta31通过-221-查询发现数据还在-delta-表没有真正写入列存表时要怎么办",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"可以手动从 delta 表 merge 到列存表"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-postgresql",children:"vacuum deltamerge poc_product;\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"42-如果通过-cm_ctl-查询集群状态特别慢需要怎么办",children:["4.2\xa0 如果通过 \xa0cm_ctl\xa0 查询集群状态特别慢，需要怎么办？",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#42-如果通过-cm_ctl-查询集群状态特别慢需要怎么办",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"可以尝试杀掉 \xa0cm_server\xa0 进程"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ ps\xa0-ux\xa0|\xa0grep\xa0cm_server\n$ kill\xa0-9\xa0id\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"其它命令",children:["其它命令",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#其它命令",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"查询磁盘io网络等适时指标",children:["查询磁盘、IO、网络等适时指标",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#查询磁盘io网络等适时指标",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"# 每3秒打印一次\nsar -n DEV -urd 3\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"查询磁盘使用情况",children:["查询磁盘使用情况",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#查询磁盘使用情况",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"df -h\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"海纳日志目录",children:["海纳日志目录",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#海纳日志目录",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"su - omm\ncd $GAUSSLOG/pg_log\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["poc%2Findex.md"]={toc:[{text:"从零开始做 POC",id:"从零开始做-poc",depth:2},{text:"先对目标服务器进行磁盘性能测试及网络带宽测试，此步骤也可在数据库安装完成后让运维同学进行测试",id:"先对目标服务器进行磁盘性能测试及网络带宽测试此步骤也可在数据库安装完成后让运维同学进行测试",depth:3},{text:"参数调整",id:"参数调整",depth:3},{text:"准备测试用例 yaml 文件",id:"准备测试用例-yaml-文件",depth:3},{text:"创建需要测试数据表",id:"创建需要测试数据表",depth:3},{text:"执行测试",id:"执行测试",depth:3},{text:"生成形成报告",id:"生成形成报告",depth:3},{text:"POC\xa0 工具",id:"poc-工具",depth:2},{text:"2.1\xa0 流行流程图",id:"21-流行流程图",depth:3},{text:"数据库常用命令",id:"数据库常用命令",depth:2},{text:"2.1\xa0 命令行相关",id:"21-命令行相关",depth:3},{text:"2.1.1\xa0 查询集群状态",id:"211-查询集群状态",depth:4},{text:"2.1.2\xa0 重启集群",id:"212-重启集群",depth:4},{text:"2.1.3\xa0 使用 \xa0gs_guc\xa0 修改数据库参数",id:"213-使用-gs_guc-修改数据库参数",depth:4},{text:"2.2\xa0 数据库脚本",id:"22-数据库脚本",depth:3},{text:"2.2.1\xa0 查询列存表的相关信息",id:"221-查询列存表的相关信息",depth:4},{text:"2.2.2\xa0 其它数据库常用脚本",id:"222-其它数据库常用脚本",depth:4},{text:"数据库参数设置及优化",id:"数据库参数设置及优化",depth:2},{text:"3.1\xa0 列式存储开启 delta 表",id:"31-列式存储开启-delta-表",depth:3},{text:"3.2\xa0 全文倒排索引(\xa0GIN->\xa0Generalized\xa0Inverted\xa0Index\xa0)",id:"32-全文倒排索引gin-generalizedinvertedindex",depth:3},{text:"3.3\xa0 复制表",id:"33-复制表",depth:3},{text:"3.4\xa0 数据库优化的参数",id:"34-数据库优化的参数",depth:3},{text:"3.4.1\xa0work_mem",id:"341work_mem",depth:4},{text:"3.4.2\xa0max_process_memory",id:"342max_process_memory",depth:4},{text:"3.4.3\xa0shared_buffers",id:"343shared_buffers",depth:4},{text:"3.4.4\xa0max_connections",id:"344max_connections",depth:4},{text:"3.4.5\xa0cstore_buffers",id:"345cstore_buffers",depth:4},{text:"FAQ",id:"faq",depth:2},{text:"4.1\xa0 当列存表开启 delta（3.1）通过 2.2.1 查询发现数据还在 delta 表，没有真正写入列存表时，要怎么办？",id:"41-当列存表开启-delta31通过-221-查询发现数据还在-delta-表没有真正写入列存表时要怎么办",depth:3},{text:"4.2\xa0 如果通过 \xa0cm_ctl\xa0 查询集群状态特别慢，需要怎么办？",id:"42-如果通过-cm_ctl-查询集群状态特别慢需要怎么办",depth:3},{text:"其它命令",id:"其它命令",depth:2},{text:"查询磁盘、IO、网络等适时指标",id:"查询磁盘io网络等适时指标",depth:3},{text:"查询磁盘使用情况",id:"查询磁盘使用情况",depth:3},{text:"海纳日志目录",id:"海纳日志目录",depth:3}],title:"POC\xa0 测试流程",frontmatter:{}}}}]);